name: Docker Image CI

on:
  push:
    branches: [ "main" ]

env:
  ALIYUN_REGISTRY: "${{ secrets.ALIYUN_REGISTRY }}"
  ALIYUN_NAME_SPACE: "${{ secrets.ALIYUN_NAME_SPACE }}"
  ALIYUN_REGISTRY_USER: "${{ secrets.ALIYUN_REGISTRY_USER }}"
  ALIYUN_REGISTRY_PASSWORD: "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Alibaba Cloud Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}
          username: ${{ env.ALIYUN_REGISTRY_USER }}
          password: ${{ env.ALIYUN_REGISTRY_PASSWORD }}
      - name: Read images.txt and build/push images
        run: |
          if [[ ! -f "images.txt" ]]; then
            echo "错误: images.txt 文件不存在!"
            exit 1
          fi

          # 从images.txt读取镜像信息并构建
          while IFS= read -r line || [ -n "$line" ]; do
            # 跳过空行
            [[ -z "$line" ]] && continue
            if echo "$line" | grep -q '^\s*#'; then
              continue
            fi

            # 分割镜像名称和Dockerfile路径
            image_name=$(echo "$line" | awk '{print $1}')
            dockerfile=$(echo "$line" | awk '{print $2}')
            # 检查Dockerfile是否存在
            if [[ ! -f "$dockerfile" ]]; then
              echo "错误: Dockerfile '$dockerfile' 不存在"
              continue
            fi

            echo "开始构建镜像: $image_name 用 Dockerfile: $dockerfile"

            # 构建并推送镜像
            image_name_tag="$ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/$image_name"
            echo "docker push $image_name_tag"
            docker buildx build \
              --push \
              --tag $image_name_tag \
              --file $dockerfile \
              .

            echo "镜像 $image_name 构建并推送完成"
          done < images.txt
